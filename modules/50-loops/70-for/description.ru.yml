---

name: Цикл For
theory: |

  Цикл `while` идеален для ситуаций, когда количество итераций неизвестно заранее, например, при поиске простого числа. Когда количество итераций известно, предпочтительнее использовать цикл `for`.

  Посмотрим реализацию переворота строки через цикл `for`:

  ```javascript
  const reverseString = (str) => {
    let result = '';
    for (let i = 0; i < str.length; i += 1) {
      result = `${str[i]}${result}`;
    }

    return result;
  };
  ```

  https://replit.com/@hexlet/js-basics-for

  Можно читать так: *цикл с индексом `i` повторяется пока `i < str.length` и после каждого шага увеличивает `i` на 1*.

  В определении цикла `for` в круглых скобках есть три выражения, разделённые точкой с запятой:

  1. Начальное значение счётчика. Этот код выполняется ровно один раз перед первой итерацией.
  2. Предикат — условие повторения циклов. Выполняется на каждой итерации. Точно так же как и в `while`
  3. Описание изменения счётчика. Этот код выполняется в конце каждой итерации.

  В остальном принцип работы точно такой же, как у цикла `while`.

  В определении `for` не обязательно указывать все три выражения. Если не указать условие повторения цикла, то цикл будет выполняться бесконечно:

  ```javascript
  let i = 1;
  // Можно даже не указывать все три выражения
  for (;;) {
    console.log(i);
    i += 1;
  }
  ```

instructions: |

  Сэмвелл обнаружил, что его сообщения перехватываются и читаются в замке «Близнецы», поэтому его атаки перестали быть внезапными. Немного подумав, он разработал программу, которая будет шифровать передаваемые сообщения по следующему алгоритму. Программа получает на вход строку и меняет местами в ней каждые 2 подряд идущих символа. Если длина строки нечётная, то последний символ остаётся на своём месте.

  ```javascript
  encrypt('move'); // omev
  encrypt('attack'); // taatkc
  // Если длина строки нечётное
  // то последний символ остается на своем месте
  encrypt('go!'); // og!
  ```

  Реализуйте функцию `encrypt()`, которая принимает на вход исходное сообщение и возвращает зашифрованное.

  Подумайте. Может ли эта функция расшифровать зашифрованное сообщение?

tips:
  - |
    [for](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for)
    [шаблонные строки](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Template_literals)
    [Логическое ИЛИ (||)](https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Logical_OR)

definitions:
  - name: Агрегация
    description: "Накопление результата во время итераций и работа с ним после цикла."
